name: build mvn and docker, push specific tag, semantic release

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  MAVEN_OPTS: "-Dmaven.repo.local=${{ github.workspace }}/backend"
  REGISTRY: ghcr.io
  GITHUB_NAME:  gemeinschaftswerknachhaltigkeit
  IMAGE_NAME: gw-portal-app

jobs:
  build:
    name: maven package, docker build and push
    runs-on: ubuntu-latest
    steps:
      - name: find latest tag
      - uses: oprypin/find-latest-tag@v1
        with:
          repository: ${{env.GITHUB_NAME}}/${{env.IMAGE_NAME}}
          releases-only: false
        id: latestVersion  # The step ID to refer to later.
      - run: echo "latestVersion is ${{ steps.latestVersion.outputs.tag }}"
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn clean package -DskipTests=true --file ${{ github.workspace }}/backend/pom.xml
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag ${{env.REGISTRY}}/${{ env.GITHUB_NAME }}/${{env.IMAGE_NAME}}:${{ steps.latestVersion.outputs.tag }}
      - name: login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: push image to GitHub Container Registry
        run: docker push ${{env.REGISTRY}}/${{ env.GITHUB_NAME }}/${{env.IMAGE_NAME}}:${{ steps.latestVersion.outputs.tag }}
  release:
    needs: build
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
      - name: Install dependencies
        run: npm clean-install
      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
        run: npm audit signatures
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release

